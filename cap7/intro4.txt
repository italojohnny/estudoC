FAÇA SUA FUNÇÃO FLEXÍVEL
Às vezes você quer criar funções em C que são realmente potentes, como sua
função find(), que podia realizar buscas usando ponteiros para funções. Mas, em
outros casos, você simplesmente quer criar funções que são fáceis de usar. Por
exemplo, a função printf(). A função printf() tem uma característica muito
legal que você tem usado: ela recebe um número variável de parâmetros.

printf("%i bottles of beer on the wall, %i bottles of beer\n", 99, 99);//você pode
printf("Take one down and pass it around,");                           //passar à função
printf("%i bottles og beer on the wall\n", 98);  //quantos parâmetros que precisa imprimir.

ENTÃO COMO VOCÊ  PODE FAZER ISSO?
E você tem um problema que precisa justamente disso. Lá no Lounge Use a
Cabeça!, a galera tem tido dificudade para manter o controle do total de
bebidas. Um dos caras tentou facilitar a vida criando um enum com a lista de
bebidas disponíveis e uma função que retorna o preço de cada uma:

enum drink {
    MUDLIDE,
    FUZZY_NAVEL,
    MONKEY_GLAND,
    ZOMBIE
};

double price (enum drink d)
{
    switch (d) {
        case MUDLIDE:       return 6.79;
        case FUZZY_NAVEL:   return 5.31;
        case MONKEY_GLAND:  return 4.82;
        case ZOMBIE:        return 5.89;
    }
    return 0;
}

E isso seria muito legal, se a equipe do Lounge Use a Cabeça! só precisasse do
preço da bebida. Mas eles querem obter o preço total de um pedido de bebidas:

price(ZOMBIE)           total(3, ZOMBIE, MONKEY_GLAND, FUZZY_NAVEL)

Eles querem uma função, chamada total(), que vai aceitar uma contagem das
bebidas e, depois, uma lista dos nomes das bebidas.
